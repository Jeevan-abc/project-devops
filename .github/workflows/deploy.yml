name: Deploy MERN to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check or Create Droplet
        id: droplet
        env:
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
          SSH_FINGERPRINT: ${{ secrets.SSH_PUBLIC_KEY_FINGERPRINT }}
        run: |
          DROPLET_INFO=$(curl -s -X GET "https://api.digitalocean.com/v2/droplets?name=mern-droplet" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            -H "Content-Type: application/json")
          DROPLET_COUNT=$(echo "$DROPLET_INFO" | jq '.droplets | length')
          if [ "$DROPLET_COUNT" -eq 0 ]; then
            echo "No Droplet found. Creating 'mern-droplet'..."
            CREATE_RESPONSE=$(curl -s -X POST "https://api.digitalocean.com/v2/droplets" \
              -H "Authorization: Bearer $DO_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"name\": \"mern-droplet\", \"region\": \"nyc3\", \"size\": \"s-1vcpu-1gb\", \"image\": \"ubuntu-22-04-x64\", \"ssh_keys\": [\"$SSH_FINGERPRINT\"], \"backups\": false, \"ipv6\": false, \"monitoring\": true}")
            DROPLET_ID=$(echo "$CREATE_RESPONSE" | jq -r '.droplet.id')
            for i in {1..30}; do
              STATUS=$(curl -s -X GET "https://api.digitalocean.com/v2/droplets/$DROPLET_ID" \
                -H "Authorization: Bearer $DO_API_TOKEN" | jq -r '.droplet.status')
              if [ "$STATUS" = "active" ]; then break; fi
              echo "Waiting... ($i/30)"
              sleep 10
            done
            DROPLET_IP=$(curl -s -X GET "https://api.digitalocean.com/v2/droplets/$DROPLET_ID" \
              -H "Authorization: Bearer $DO_API_TOKEN" | jq -r '.droplet.networks.v4[0].ip_address')
            echo "Droplet created: $DROPLET_IP"
          else
            DROPLET_IP=$(echo "$DROPLET_INFO" | jq -r '.droplets[0].networks.v4[0].ip_address')
            echo "Droplet exists: $DROPLET_IP"
          fi
          echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Ensure git, nodejs, and npm are installed
            apt update && apt install -y git nodejs npm

            # Install PM2 globally
            npm install -g pm2

            # Clone or update the repository
            if [ ! -d "/root/mern-app" ]; then
              git clone https://github.com/Jeevan-abc/project-devops /root/mern-app
            fi

            # Navigate to the project directory
            cd /root/mern-app

            # Pull the latest changes
            git fetch origin
            git reset --hard origin/main

            # Install backend dependencies
            cd server
            npm install

            # Install frontend dependencies and build
            cd ../client
            npm install
            npm run build

            # Start or restart the application with PM2
            cd ..
            pm2 restart mern-app || pm2 start server/server.js --name mern-app

            # Ensure PM2 starts on system reboot
            pm2 startup
            pm2 save
